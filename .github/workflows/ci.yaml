name: CI

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build-and-test:
        name: Build and Test
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Install Dependencies
              run: npm ci

            - name: Run ESLint
              run: npm run lint:fix

            - name: Test and Coverage
              run: npm run test:coverage
              env:
                  NODE_ENV: test
                  DB_URI: ${{ secrets.DB_URI }}
                  DB_HOST: ${{ secrets.DB_HOST }}
                  DB_PORT: ${{ secrets.DB_PORT }}
                  DB_USERNAME: ${{ secrets.DB_USERNAME }}
                  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
                  DB_NAME: ${{ secrets.DB_NAME }}
                  SSL_REJECT_UNAUTHORIZED: "false"
                  JWT_SECRET: ${{ secrets.JWT_SECRET }}
                  JWKS_URI: ${{ secrets.JWKS_URI }}
                  RSA_PRIVATE_KEY: ${{ secrets.RSA_PRIVATE_KEY }}
                  RSA_PUBLIC_KEY: ${{ secrets.RSA_PUBLIC_KEY }}

            - name: Build TypeScript
              run: npm run build

            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    build-and-push-docker:
        name: Build and Push Docker Image
        runs-on: ubuntu-latest
        needs: build-and-test
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
            IMAGE_NAME: roshan798/mernstack_auth_service_test
            IMAGE_TAG: build-${{ github.run_number }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Build Docker Image
              run: docker build -t $IMAGE_NAME:$IMAGE_TAG -f docker/prod/Dockerfile .

            - name: Push Docker Image
              run: docker push $IMAGE_NAME:$IMAGE_TAG
